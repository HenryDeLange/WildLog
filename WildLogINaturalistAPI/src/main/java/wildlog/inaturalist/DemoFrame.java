package wildlog.inaturalist;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import java.awt.Desktop;
import java.awt.EventQueue;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.HttpURLConnection;
import java.net.URI;
import java.net.URL;
import java.net.URLConnection;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Set;
import javax.swing.JFrame;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import wildlog.inaturalist.queryobjects.INaturalistAddObservation;
import wildlog.inaturalist.queryobjects.INaturalistSearchObservations;
import wildlog.inaturalist.queryobjects.enums.INaturalistGeoprivacy;
import wildlog.inaturalist.responseobjects.INaturalistObservation;

public class DemoFrame extends JFrame {

    private static final long serialVersionUID = 1L;

    public DemoFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtLog = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        btnAddObservation = new javax.swing.JButton();
        btnDeleteObservation = new javax.swing.JButton();
        btnSearchObservations = new javax.swing.JButton();
        btnGetObservation = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        txtID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblAuthLink = new javax.swing.JLabel();
        txtToken = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("iNaturalist - POC");

        txtLog.setColumns(20);
        txtLog.setRows(5);
        jScrollPane1.setViewportView(txtLog);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("iNaturalist - PoC");

        btnAddObservation.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnAddObservation.setText("Add Obs");
        btnAddObservation.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddObservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddObservationActionPerformed(evt);
            }
        });

        btnDeleteObservation.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnDeleteObservation.setText("Delete Obs");
        btnDeleteObservation.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDeleteObservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteObservationActionPerformed(evt);
            }
        });

        btnSearchObservations.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSearchObservations.setText("Search Obs");
        btnSearchObservations.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSearchObservations.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchObservationsActionPerformed(evt);
            }
        });

        btnGetObservation.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnGetObservation.setText("Get Obs");
        btnGetObservation.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGetObservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetObservationActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("iNat Auth Link");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("iNat Auth Token");

        lblAuthLink.setText("http://www.inaturalist.org/oauth/authorize...");
        lblAuthLink.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblAuthLink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblAuthLinkMousePressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("iNat Obs ID");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtToken)
                    .addComponent(txtID, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblAuthLink, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAuthLink, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtToken)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(10, 10, 10))
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAddObservation, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                        .addGap(10, 10, 10)
                        .addComponent(btnGetObservation, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                        .addGap(10, 10, 10)
                        .addComponent(btnDeleteObservation, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                        .addGap(10, 10, 10)
                        .addComponent(btnSearchObservations, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(10, 10, 10)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddObservation, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteObservation, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchObservations, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGetObservation, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 312, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddObservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddObservationActionPerformed
        try {
            INaturalistAddObservation addObservation = new INaturalistAddObservation();
            addObservation.setSpecies_guess("test");
            addObservation.setDescription("WARNING: THIS IS ONLY TEST DATA!");
            addObservation.setLatitude(0.00123);
            addObservation.setLongitide(0.00123);
            addObservation.setGeoprivacy(INaturalistGeoprivacy._private);
            
            URL url = new URL("https://www.inaturalist.org/observations.json");
            HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection();
            urlConnection.setRequestMethod("POST");
            urlConnection.setDoOutput(true);
            urlConnection.setRequestProperty("Content-type", "application/x-www-form-urlencoded");
            urlConnection.setRequestProperty("Authorization", "Bearer " + txtToken.getText().trim());
//            urlConnection.setRequestProperty("Authorization", "bearer " + txtToken.getText().trim());
            
            OutputStreamWriter writer = new OutputStreamWriter(urlConnection.getOutputStream());
            writer.write(addObservation.getDataString());
            writer.flush();
            String line;
            BufferedReader reader = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()));
            // Print the response
            while ((line = reader.readLine()) != null) {
// TODO: Parse response as JSON en lees dan die ID
              System.out.println(line);
            }
            writer.close();
            reader.close();
            urlConnection.disconnect();
            txtLog.setText("Added... " + "TODO ID");
        }
        catch (Exception e) {
            e.printStackTrace(System.err);
            txtLog.setText(e.getMessage());
        }
    }//GEN-LAST:event_btnAddObservationActionPerformed

    private void lblAuthLinkMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAuthLinkMousePressed
        try {
            Desktop.getDesktop().browse(URI.create("http://www.inaturalist.org/oauth/authorize"
                    + "?client_id=33639c729ed7cfaa1d6d23411c94c6225b60a54b8c2c65bdea2d0baa07e629c0"
                    + "&redirect_uri=http%3A%2F%2Fwww.mywild.co.za%2Fwildlog%2FiNatAuthCode.php"
                    + "&response_type=code"));
        }
        catch (IOException ex) {
            ex.printStackTrace(System.err);
        }
    }//GEN-LAST:event_lblAuthLinkMousePressed

    private void btnSearchObservationsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchObservationsActionPerformed
        try {
            final int PAGE_LIMIT_INATURALIST = 20;
            int requestPage = 0;
            int totalEntries = 0;
            final List<INaturalistObservation> lstAllINaturalistResults = new ArrayList<>(PAGE_LIMIT_INATURALIST);
            do {
                requestPage = requestPage + 1; // Note: Increase first because page 0 and 1 seems to return the same info
                
                INaturalistSearchObservations searchObservations = new INaturalistSearchObservations();
                searchObservations.setTaxon_name("Lycaon pictus");
                searchObservations.setD1(LocalDate.now().minusYears(3));
                searchObservations.setD2(LocalDate.now());
                searchObservations.setPage(requestPage);
                searchObservations.setPer_page(PAGE_LIMIT_INATURALIST);
                
                URL url = new URL("https://www.inaturalist.org/observations.json" + searchObservations.getQueryString());
                URLConnection urlConnection = url.openConnection();
                Map<String, List<String>> mapHTTPHeaders = urlConnection.getHeaderFields();
                Set<Map.Entry<String, List<String>>> setHTTPHeaderEntries = mapHTTPHeaders.entrySet();
                for (Map.Entry<String, List<String>> headerEntry : setHTTPHeaderEntries) {
                    if ("X-Total-Entries".equalsIgnoreCase(headerEntry.getKey())) {
                        List<String> headerValues = headerEntry.getValue();
                        for (String value : headerValues) {
                            try {
                                totalEntries = Integer.parseInt(value);
                                break;
                            }
                            catch (NumberFormatException ex) {
                                ex.printStackTrace(System.err);
                            }
                        }
                        break;
                    }
                }
                InputStream inputStream = urlConnection.getInputStream();
                List<INaturalistObservation> lstResults = new Gson().fromJson(new InputStreamReader(inputStream, "UTF-8"), 
                        new TypeToken<List<INaturalistObservation>>(){}.getType());
                lstAllINaturalistResults.addAll(lstResults);
                txtLog.setText("Loaded " + lstAllINaturalistResults.size() + " of " + totalEntries + " records.");
            }
            while ((requestPage * PAGE_LIMIT_INATURALIST) < totalEntries);
            // Print the records
            for (INaturalistObservation observation : lstAllINaturalistResults) {
                System.out.println("---------------------------------------------------------------- ");
                System.out.println("ID         = " + observation.getId());
                System.out.println("Taxon      = " + observation.getTaxon().getName());
                System.out.println("Date       = " + observation.getObserved_on());
                if (observation.getPhotos() != null && !observation.getPhotos().isEmpty()) {
                    System.out.println("Photo Link = " + observation.getPhotos().get(0).getMedium_url());
                }
                System.out.println("");
            }
        }
        catch (Exception e) {
            e.printStackTrace(System.err);
            txtLog.setText(e.getMessage());
        }
    }//GEN-LAST:event_btnSearchObservationsActionPerformed

    private void btnGetObservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetObservationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnGetObservationActionPerformed

    private void btnDeleteObservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteObservationActionPerformed
        try {
            INaturalistAddObservation addObservation = new INaturalistAddObservation();
            addObservation.setSpecies_guess("test");
            addObservation.setDescription("WARNING: THIS IS ONLY TEST DATA!");
            addObservation.setLatitude(0.00123);
            addObservation.setLongitide(0.00123);
            addObservation.setGeoprivacy(INaturalistGeoprivacy._private);
            
            URL url = new URL("https://www.inaturalist.org/observations/" + txtID.getText().trim() + ".json");
            HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection();
            urlConnection.setRequestMethod("DELETE");
            urlConnection.setDoOutput(true);
            urlConnection.setRequestProperty("Content-type", "application/x-www-form-urlencoded");
            urlConnection.setRequestProperty("Authorization", "Bearer " + txtToken.getText().trim());
            
            OutputStreamWriter writer = new OutputStreamWriter(urlConnection.getOutputStream());
            writer.write(addObservation.getDataString());
            writer.flush();
            String line;
            BufferedReader reader = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()));
            // Print the response
            while ((line = reader.readLine()) != null) {
// TODO: Parse response as JSON en lees dan die ID
              System.out.println(line);
            }
            writer.close();
            reader.close();
            urlConnection.disconnect();
            txtLog.setText("Deleted... " + "TODO ID");
        }
        catch (Exception e) {
            e.printStackTrace(System.err);
            txtLog.setText(e.getMessage());
        }
    }//GEN-LAST:event_btnDeleteObservationActionPerformed

    public static void main(String args[]) {
        // Set the Windows Look and Feel
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }
        catch (ClassNotFoundException | IllegalAccessException | InstantiationException | UnsupportedLookAndFeelException ex) {
            System.err.println("Promlem loading Look and Feel: " + ex.getMessage());
        }
        // Create and display the form
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                DemoFrame demoFrame = new DemoFrame();
                demoFrame.setLocationRelativeTo(null);
                demoFrame.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddObservation;
    private javax.swing.JButton btnDeleteObservation;
    private javax.swing.JButton btnGetObservation;
    private javax.swing.JButton btnSearchObservations;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAuthLink;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextArea txtLog;
    private javax.swing.JTextField txtToken;
    // End of variables declaration//GEN-END:variables
}
