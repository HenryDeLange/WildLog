package wildlog.ui.panels.helpers;

import java.awt.Color;
import java.awt.Component;
import javax.swing.BorderFactory;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.border.LineBorder;
import wildlog.WildLogApp;
import wildlog.data.dataobjects.Sighting;
import wildlog.data.enums.system.WildLogThumbnailSizes;
import wildlog.utils.UtilsFileProcessing;
import wildlog.utils.UtilsImageProcessing;


public class SightingBox extends JPanel {
    private final Sighting sighting;
    private final int fileIndex;
    private final boolean alsoSelectRelated;


    public SightingBox(Sighting inSighting, int inFileIndex, boolean inAlsoSelectRelated) {
        sighting = inSighting;
        fileIndex = inFileIndex;
        alsoSelectRelated = inAlsoSelectRelated;
        initComponents();
        UtilsImageProcessing.setupFoto(inSighting.getID(), fileIndex, lblImage, WildLogThumbnailSizes.MEDIUM, WildLogApp.getApplication());
        lblImage.setToolTipText(Long.toString(inSighting.getID()));
        lblName.setText(inSighting.getCachedElementName());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator3 = new javax.swing.JSeparator();
        lblImage = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();

        jSeparator3.setName("jSeparator3"); // NOI18N

        setBackground(new java.awt.Color(0, 0, 0));
        setBorder(javax.swing.BorderFactory.createLineBorder(Color.LIGHT_GRAY));
        setMaximumSize(new java.awt.Dimension(200, 220));
        setMinimumSize(new java.awt.Dimension(200, 220));
        setName("Form"); // NOI18N
        setPreferredSize(new java.awt.Dimension(200, 220));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });
        setLayout(new java.awt.BorderLayout());

        lblImage.setBackground(new java.awt.Color(0, 0, 0));
        lblImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImage.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblImage.setName("lblImage"); // NOI18N
        lblImage.setOpaque(true);
        lblImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lblImageMouseReleased(evt);
            }
        });
        add(lblImage, java.awt.BorderLayout.CENTER);

        lblName.setBackground(new java.awt.Color(0, 0, 0));
        lblName.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblName.setForeground(new java.awt.Color(255, 255, 255));
        lblName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblName.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblName.setName("lblName"); // NOI18N
        lblName.setOpaque(true);
        lblName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lblNameMouseReleased(evt);
            }
        });
        add(lblName, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        if (evt.isPopupTrigger() || SwingUtilities.isRightMouseButton(evt)) {
            // Open the file
            UtilsFileProcessing.openFile(sighting.getID(), fileIndex, WildLogApp.getApplication());
        }
        else {
            // Toggle selection
            toggleSelection();
            // Open the file if it was double clicked
            if (evt.getClickCount() == 2) {
                UtilsFileProcessing.openFile(sighting.getID(), fileIndex, WildLogApp.getApplication());
            }
        }
    }//GEN-LAST:event_formMouseReleased

    public void toggleSelection() {
        if (((LineBorder) getBorder()).getLineColor() == Color.LIGHT_GRAY) {
            setBorder(BorderFactory.createLineBorder(Color.GREEN, 2));
        }
        else {
            setBorder(BorderFactory.createLineBorder(Color.LIGHT_GRAY, 1));
        }
        // If this is the Grid Files view, then also select other boxes from the same sighting
        if (alsoSelectRelated) {
            for (Component componenet : ((JPanel) getParent()).getComponents()) {
                if (componenet instanceof SightingBox) {
                    SightingBox sightingBox = (SightingBox) componenet;
                    if (sighting.getID() == sightingBox.getSighting().getID()) {
                        sightingBox.setBorder(BorderFactory.createLineBorder(((LineBorder) getBorder()).getLineColor(), ((LineBorder) getBorder()).getThickness()));
                    }
                }
            }
        }
    }

    private void lblImageMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImageMouseReleased
        formMouseReleased(evt);
    }//GEN-LAST:event_lblImageMouseReleased

    private void lblNameMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblNameMouseReleased
        formMouseReleased(evt);
    }//GEN-LAST:event_lblNameMouseReleased

    public Sighting getSighting() {
        return sighting;
    }
    
    public boolean isSelected() {
        return ((LineBorder) getBorder()).getLineColor() == Color.GREEN;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblName;
    // End of variables declaration//GEN-END:variables
}
