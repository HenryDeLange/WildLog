package wildlog.ui.dialog;

import java.awt.Dimension;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.KeyStroke;
import wildlog.data.dataobjects.interfaces.DataObjectWithGPS;
import wildlog.data.enums.Latitudes;
import wildlog.data.enums.Longitudes;
import wildlog.utils.LatLonConverter;
import wildlog.utils.ui.SpinnerFixer;


public class GPSDialog extends JDialog {
    private boolean selectionMade = false;
    private DataObjectWithGPS dataObjectWithGPS;
    private double uiLatitude = 0.0;
    private double uiLongitude = 0.0;

    /** Creates new form GPSDialog */
    public GPSDialog(Frame parent, boolean modal, DataObjectWithGPS inDataObjectWithGPS) {
        super(parent, modal);
        dataObjectWithGPS = inDataObjectWithGPS;
        if (dataObjectWithGPS == null)
            dispose();
        // Need to set a few settings onthe content pane before continuing (for example size, background color, etc.)
        getContentPane().setPreferredSize(new Dimension(410, 210));
        // Initialize the auto generated code
        initComponents();
        // Hide stuff
        spnLatDecimal.setVisible(false);
        spnLonDecimal.setVisible(false);
        // Setup the escape key
        // TODO: Maybe move this into a util method that can apply it to any dialog (or similar component)
        final JDialog thisHandler = this;
        getRootPane().registerKeyboardAction(
                new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        thisHandler.dispose();
                    }
                },
                KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), JComponent.WHEN_IN_FOCUSED_WINDOW);
        // Fix the selection of the spinners
        SpinnerFixer.fixSelectAllForSpinners(spnLatDecimal);
        SpinnerFixer.fixSelectAllForSpinners(spnLatDeg);
        SpinnerFixer.fixSelectAllForSpinners(spnLatMin);
        SpinnerFixer.fixSelectAllForSpinners(spnLatSec);
        SpinnerFixer.fixSelectAllForSpinners(spnLonDecimal);
        SpinnerFixer.fixSelectAllForSpinners(spnLonDeg);
        SpinnerFixer.fixSelectAllForSpinners(spnLonMin);
        SpinnerFixer.fixSelectAllForSpinners(spnLonSec);
        // Setup the ui Lat and Lon
        if (Latitudes.NORTH.equals(dataObjectWithGPS.getLatitude())) {
            tglNorth.setSelected(true);
        }
        else
        if (Latitudes.SOUTH.equals(dataObjectWithGPS.getLatitude())) {
            tglSouth.setSelected(true);
        }
        else {
            // TODO: Use DB defaults to set the initial lat/lon
            tglSouth.setSelected(true);
        }
        if (Longitudes.EAST.equals(dataObjectWithGPS.getLongitude())) {
            tglEast.setSelected(true);
        }
        else
        if (Longitudes.WEST.equals(dataObjectWithGPS.getLongitude())) {
            tglWest.setSelected(true);
        }
        else {
            // TODO: Use DB defaults to set the initial lat/lon
            tglEast.setSelected(true);
        }
        // Get existing value from passed in dataObjectWithGPS
        uiLatitude = LatLonConverter.getDecimalDegree(
                Latitudes.NONE,
                dataObjectWithGPS.getLatDegrees(),
                dataObjectWithGPS.getLatMinutes(),
                dataObjectWithGPS.getLatSecondsDouble());
        uiLongitude = LatLonConverter.getDecimalDegree(
                Longitudes.NONE,
                dataObjectWithGPS.getLonDegrees(),
                dataObjectWithGPS.getLonMinutes(),
                dataObjectWithGPS.getLonSecondsDouble());
        // Populate the initial values into the spinners
        tglDecimalDegrees.setSelected(true);
        setupDD();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnUsePrevious = new javax.swing.JButton();
        btnUseImage = new javax.swing.JButton();
        btnUseMap = new javax.swing.JButton();
        btnUseGPX = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        tglNorth = new javax.swing.JToggleButton();
        tglSouth = new javax.swing.JToggleButton();
        jLabel2 = new javax.swing.JLabel();
        tglWest = new javax.swing.JToggleButton();
        tglEast = new javax.swing.JToggleButton();
        tglDecimalDegrees = new javax.swing.JToggleButton();
        tglDegMinSec = new javax.swing.JToggleButton();
        spnLatDeg = new javax.swing.JSpinner();
        spnLatMin = new javax.swing.JSpinner();
        spnLatSec = new javax.swing.JSpinner();
        spnLatDecimal = new javax.swing.JSpinner();
        spnLonDeg = new javax.swing.JSpinner();
        spnLonMin = new javax.swing.JSpinner();
        spnLonSec = new javax.swing.JSpinner();
        spnLonDecimal = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(wildlog.WildLogApp.class).getContext().getResourceMap(GPSDialog.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setMinimumSize(new java.awt.Dimension(410, 210));
        setName("Form"); // NOI18N
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnUsePrevious.setText(resourceMap.getString("btnUsePrevious.text")); // NOI18N
        btnUsePrevious.setFocusPainted(false);
        btnUsePrevious.setName("btnUsePrevious"); // NOI18N
        getContentPane().add(btnUsePrevious, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 120, 30));

        btnUseImage.setIcon(resourceMap.getIcon("btnUseImage.icon")); // NOI18N
        btnUseImage.setText(resourceMap.getString("btnUseImage.text")); // NOI18N
        btnUseImage.setToolTipText(resourceMap.getString("btnUseImage.toolTipText")); // NOI18N
        btnUseImage.setFocusPainted(false);
        btnUseImage.setMargin(new java.awt.Insets(2, 6, 2, 6));
        btnUseImage.setName("btnUseImage"); // NOI18N
        getContentPane().add(btnUseImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 120, 30));

        btnUseMap.setIcon(resourceMap.getIcon("btnUseMap.icon")); // NOI18N
        btnUseMap.setText(resourceMap.getString("btnUseMap.text")); // NOI18N
        btnUseMap.setFocusPainted(false);
        btnUseMap.setName("btnUseMap"); // NOI18N
        getContentPane().add(btnUseMap, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 120, 30));

        btnUseGPX.setIcon(resourceMap.getIcon("btnUseGPX.icon")); // NOI18N
        btnUseGPX.setText(resourceMap.getString("btnUseGPX.text")); // NOI18N
        btnUseGPX.setFocusPainted(false);
        btnUseGPX.setMargin(new java.awt.Insets(2, 6, 2, 6));
        btnUseGPX.setName("btnUseGPX"); // NOI18N
        getContentPane().add(btnUseGPX, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 50, 120, 30));

        btnSave.setIcon(resourceMap.getIcon("btnSave.icon")); // NOI18N
        btnSave.setText(resourceMap.getString("btnSave.text")); // NOI18N
        btnSave.setFocusPainted(false);
        btnSave.setName("btnSave"); // NOI18N
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        getContentPane().add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 10, 130, 70));

        jSeparator1.setName("jSeparator1"); // NOI18N
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 85, 390, -1));

        jLabel1.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        tglNorth.setText(Latitudes.NORTH.getText());
        tglNorth.setFocusPainted(false);
        tglNorth.setMargin(new java.awt.Insets(2, 2, 2, 2));
        tglNorth.setName("tglNorth"); // NOI18N
        tglNorth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tglNorthActionPerformed(evt);
            }
        });
        getContentPane().add(tglNorth, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 60, 30));

        tglSouth.setText(Latitudes.SOUTH.getText());
        tglSouth.setFocusPainted(false);
        tglSouth.setMargin(new java.awt.Insets(2, 2, 2, 2));
        tglSouth.setName("tglSouth"); // NOI18N
        tglSouth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tglSouthActionPerformed(evt);
            }
        });
        getContentPane().add(tglSouth, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 60, 30));

        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        tglWest.setText(Longitudes.WEST.getText());
        tglWest.setFocusPainted(false);
        tglWest.setMargin(new java.awt.Insets(2, 2, 2, 2));
        tglWest.setName("tglWest"); // NOI18N
        tglWest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tglWestActionPerformed(evt);
            }
        });
        getContentPane().add(tglWest, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 170, 60, 30));

        tglEast.setText(Longitudes.EAST.getText());
        tglEast.setFocusPainted(false);
        tglEast.setMargin(new java.awt.Insets(2, 2, 2, 2));
        tglEast.setName("tglEast"); // NOI18N
        tglEast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tglEastActionPerformed(evt);
            }
        });
        getContentPane().add(tglEast, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 60, 30));

        tglDecimalDegrees.setText(resourceMap.getString("tglDecimalDegrees.text")); // NOI18N
        tglDecimalDegrees.setToolTipText(resourceMap.getString("tglDecimalDegrees.toolTipText")); // NOI18N
        tglDecimalDegrees.setFocusPainted(false);
        tglDecimalDegrees.setName("tglDecimalDegrees"); // NOI18N
        tglDecimalDegrees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tglDecimalDegreesActionPerformed(evt);
            }
        });
        getContentPane().add(tglDecimalDegrees, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 110, 60, 45));

        tglDegMinSec.setText(resourceMap.getString("tglDegMinSec.text")); // NOI18N
        tglDegMinSec.setToolTipText(resourceMap.getString("tglDegMinSec.toolTipText")); // NOI18N
        tglDegMinSec.setFocusPainted(false);
        tglDegMinSec.setName("tglDegMinSec"); // NOI18N
        tglDegMinSec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tglDegMinSecActionPerformed(evt);
            }
        });
        getContentPane().add(tglDegMinSec, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 155, 60, 45));

        spnLatDeg.setFont(resourceMap.getFont("spnLonDecimal.font")); // NOI18N
        spnLatDeg.setModel(new javax.swing.SpinnerNumberModel(0, 0, 90, 1));
        spnLatDeg.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        spnLatDeg.setEditor(new javax.swing.JSpinner.NumberEditor(spnLatDeg, "#"));
        spnLatDeg.setName("spnLatDeg"); // NOI18N
        getContentPane().add(spnLatDeg, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, 50, 30));

        spnLatMin.setFont(resourceMap.getFont("spnLonDecimal.font")); // NOI18N
        spnLatMin.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));
        spnLatMin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        spnLatMin.setEditor(new javax.swing.JSpinner.NumberEditor(spnLatMin, "#"));
        spnLatMin.setName("spnLatMin"); // NOI18N
        getContentPane().add(spnLatMin, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 110, 50, 30));

        spnLatSec.setFont(resourceMap.getFont("spnLonDecimal.font")); // NOI18N
        spnLatSec.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, 59.999999999d, 1.0E-4d));
        spnLatSec.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        spnLatSec.setEditor(new javax.swing.JSpinner.NumberEditor(spnLatSec, "#.####"));
        spnLatSec.setName("spnLatSec"); // NOI18N
        getContentPane().add(spnLatSec, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 110, 70, 30));

        spnLatDecimal.setFont(resourceMap.getFont("spnLatDecimal.font")); // NOI18N
        spnLatDecimal.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, 90.0d, 1.0E-5d));
        spnLatDecimal.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        spnLatDecimal.setEditor(new javax.swing.JSpinner.NumberEditor(spnLatDecimal, "#.############"));
        spnLatDecimal.setName("spnLatDecimal"); // NOI18N
        getContentPane().add(spnLatDecimal, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, 190, 30));

        spnLonDeg.setFont(resourceMap.getFont("spnLonDecimal.font")); // NOI18N
        spnLonDeg.setModel(new javax.swing.SpinnerNumberModel(0, 0, 180, 1));
        spnLonDeg.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        spnLonDeg.setEditor(new javax.swing.JSpinner.NumberEditor(spnLonDeg, "#"));
        spnLonDeg.setName("spnLonDeg"); // NOI18N
        getContentPane().add(spnLonDeg, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 170, 50, 30));

        spnLonMin.setFont(resourceMap.getFont("spnLonDecimal.font")); // NOI18N
        spnLonMin.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));
        spnLonMin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        spnLonMin.setEditor(new javax.swing.JSpinner.NumberEditor(spnLonMin, "#"));
        spnLonMin.setName("spnLonMin"); // NOI18N
        getContentPane().add(spnLonMin, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 170, 50, 30));

        spnLonSec.setFont(resourceMap.getFont("spnLonSec.font")); // NOI18N
        spnLonSec.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, 59.999999999d, 1.0E-4d));
        spnLonSec.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        spnLonSec.setEditor(new javax.swing.JSpinner.NumberEditor(spnLonSec, "#.####"));
        spnLonSec.setName("spnLonSec"); // NOI18N
        getContentPane().add(spnLonSec, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 170, 70, 30));

        spnLonDecimal.setFont(resourceMap.getFont("spnLonDecimal.font")); // NOI18N
        spnLonDecimal.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, 180.0d, 1.0E-5d));
        spnLonDecimal.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        spnLonDecimal.setEditor(new javax.swing.JSpinner.NumberEditor(spnLonDecimal, "#.############"));
        spnLonDecimal.setName("spnLonDecimal"); // NOI18N
        getContentPane().add(spnLonDecimal, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 170, 190, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // Get lat and long enums
        if (tglNorth.isSelected())
            dataObjectWithGPS.setLatitude(Latitudes.NORTH);
        else
            dataObjectWithGPS.setLatitude(Latitudes.SOUTH);
        if (tglEast.isSelected())
            dataObjectWithGPS.setLongitude(Longitudes.EAST);
        else
            dataObjectWithGPS.setLongitude(Longitudes.WEST);
        // Get the number values
        if (tglDecimalDegrees.isSelected()) {
            // Use decimal degrees
            double latDecimalDegree = (double)spnLatDecimal.getValue();
            double lonDecimalDegree = (double)spnLonDecimal.getValue();
            dataObjectWithGPS.setLatDegrees(LatLonConverter.getDegrees(Latitudes.NONE, latDecimalDegree));
            dataObjectWithGPS.setLonDegrees(LatLonConverter.getDegrees(Longitudes.NONE, lonDecimalDegree));
            dataObjectWithGPS.setLatMinutes(LatLonConverter.getMinutes(latDecimalDegree));
            dataObjectWithGPS.setLonMinutes(LatLonConverter.getMinutes(lonDecimalDegree));
            dataObjectWithGPS.setLatSecondsDouble(LatLonConverter.getSeconds(latDecimalDegree));
            dataObjectWithGPS.setLonSecondsDouble(LatLonConverter.getSeconds(lonDecimalDegree));
        }
        else {
            // Use degrees minutes seconds
            dataObjectWithGPS.setLatDegrees((int)spnLatDeg.getValue());
            dataObjectWithGPS.setLonDegrees((int)spnLonDeg.getValue());
            dataObjectWithGPS.setLatMinutes((int)spnLatMin.getValue());
            dataObjectWithGPS.setLonMinutes((int)spnLonMin.getValue());
            dataObjectWithGPS.setLatSecondsDouble((Double)spnLatSec.getValue());
            dataObjectWithGPS.setLonSecondsDouble((Double)spnLonSec.getValue());
        }
        selectionMade = true;
        dispose();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void tglNorthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tglNorthActionPerformed
        if (tglNorth.isSelected())
            tglSouth.setSelected(false);
        else
            tglNorth.setSelected(true);
    }//GEN-LAST:event_tglNorthActionPerformed

    private void tglSouthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tglSouthActionPerformed
        if (tglSouth.isSelected())
            tglNorth.setSelected(false);
        else
            tglSouth.setSelected(true);
    }//GEN-LAST:event_tglSouthActionPerformed

    private void tglWestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tglWestActionPerformed
        if (tglWest.isSelected())
            tglEast.setSelected(false);
        else
            tglWest.setSelected(true);
    }//GEN-LAST:event_tglWestActionPerformed

    private void tglEastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tglEastActionPerformed
        if (tglEast.isSelected())
            tglWest.setSelected(false);
        else
            tglEast.setSelected(true);
    }//GEN-LAST:event_tglEastActionPerformed

    private void tglDecimalDegreesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tglDecimalDegreesActionPerformed
        if (tglDecimalDegrees.isSelected()) {
            tglDegMinSec.setSelected(false);
            loadValuesFromDMS();
            setupDD();
        }
        else {
            tglDecimalDegrees.setSelected(true);
        }
    }//GEN-LAST:event_tglDecimalDegreesActionPerformed

    private void tglDegMinSecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tglDegMinSecActionPerformed
        if (tglDegMinSec.isSelected()) {
            tglDecimalDegrees.setSelected(false);
            loadValuesFromDD();
            setupDMS();
        }
        else {
            tglDegMinSec.setSelected(true);
        }
    }//GEN-LAST:event_tglDegMinSecActionPerformed

    private void setupDD() {
        // Update UI
        spnLatDeg.setVisible(false);
        spnLatMin.setVisible(false);
        spnLatSec.setVisible(false);
        spnLatDecimal.setVisible(true);
        spnLonDeg.setVisible(false);
        spnLonMin.setVisible(false);
        spnLonSec.setVisible(false);
        spnLonDecimal.setVisible(true);
        // Setup values
        spnLatDecimal.setValue(uiLatitude);
        spnLonDecimal.setValue(uiLongitude);
    }

    private void setupDMS() {
        // Update UI
        spnLatDeg.setVisible(true);
        spnLatMin.setVisible(true);
        spnLatSec.setVisible(true);
        spnLatDecimal.setVisible(false);
        spnLonDeg.setVisible(true);
        spnLonMin.setVisible(true);
        spnLonSec.setVisible(true);
        spnLonDecimal.setVisible(false);
        // Setup values
        spnLatDeg.setValue(LatLonConverter.getDegrees(Latitudes.NONE, uiLatitude));
        spnLatMin.setValue(LatLonConverter.getMinutes(uiLatitude));
        spnLatSec.setValue(LatLonConverter.getSeconds(uiLatitude));
        spnLonDeg.setValue(LatLonConverter.getDegrees(Longitudes.NONE, uiLongitude));
        spnLonMin.setValue(LatLonConverter.getMinutes(uiLongitude));
        spnLonSec.setValue(LatLonConverter.getSeconds(uiLongitude));
    }

    private void loadValuesFromDD() {
        uiLatitude = (double)spnLatDecimal.getValue();
        uiLongitude = (double)spnLonDecimal.getValue();
    }

    private void loadValuesFromDMS() {
        uiLatitude = LatLonConverter.getDecimalDegree(
            Latitudes.NONE,
            (int)spnLatDeg.getValue(),
            (int)spnLatMin.getValue(),
            (double)spnLatSec.getValue());
        uiLongitude = LatLonConverter.getDecimalDegree(
            Longitudes.NONE,
            (int)spnLonDeg.getValue(),
            (int)spnLonMin.getValue(),
            (double)spnLonSec.getValue());
    }

    public boolean isSelectionMade() {
        return selectionMade;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUseGPX;
    private javax.swing.JButton btnUseImage;
    private javax.swing.JButton btnUseMap;
    private javax.swing.JButton btnUsePrevious;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSpinner spnLatDecimal;
    private javax.swing.JSpinner spnLatDeg;
    private javax.swing.JSpinner spnLatMin;
    private javax.swing.JSpinner spnLatSec;
    private javax.swing.JSpinner spnLonDecimal;
    private javax.swing.JSpinner spnLonDeg;
    private javax.swing.JSpinner spnLonMin;
    private javax.swing.JSpinner spnLonSec;
    private javax.swing.JToggleButton tglDecimalDegrees;
    private javax.swing.JToggleButton tglDegMinSec;
    private javax.swing.JToggleButton tglEast;
    private javax.swing.JToggleButton tglNorth;
    private javax.swing.JToggleButton tglSouth;
    private javax.swing.JToggleButton tglWest;
    // End of variables declaration//GEN-END:variables
}
