package wildlog.ui.reports;

import java.awt.Dimension;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.edit.PDPageContentStream;
import org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap;
import org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage;
import wildlog.WildLogApp;
import wildlog.ui.dialogs.utils.UtilsDialog;
import wildlog.ui.helpers.ProgressbarTask;
import wildlog.utils.UtilsConcurency;
import wildlog.utils.UtilsFileProcessing;
import wildlog.utils.WildLogPaths;


public class ReportExportDialog extends JDialog {
    private final BufferedImage chartImage;

    
    public ReportExportDialog(JFrame inParent, BufferedImage inChartImage) {
        super(inParent);
        // Set passed in values
        chartImage = inChartImage;
        // Auto generated code
        initComponents();
        // Pack
        pack();
        // Setup the default behavior
        UtilsDialog.addEscapeKeyListener(this);
        UtilsDialog.setDialogToCenter(inParent, this);
        UtilsDialog.addModalBackgroundPanel(inParent, this);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnPrint = new javax.swing.JButton();
        btnExportPDF = new javax.swing.JButton();
        btnExportImage = new javax.swing.JButton();
        btnExportHTML = new javax.swing.JButton();
        btnExportHTMLAdvanced = new javax.swing.JButton();
        btnExportCSV = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Available Report Export Formats");
        setIconImage(new ImageIcon(WildLogApp.getApplication().getClass().getResource("resources/icons/Export.png")).getImage());
        setModal(true);
        setName("Form"); // NOI18N
        setResizable(false);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        btnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/wildlog/resources/icons/WildLog Icon.gif"))); // NOI18N
        btnPrint.setText("Print Report");
        btnPrint.setToolTipText("Create a new Workspace containing only relevant data and linked records.");
        btnPrint.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPrint.setFocusPainted(false);
        btnPrint.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnPrint.setIconTextGap(10);
        btnPrint.setMargin(new java.awt.Insets(2, 8, 2, 8));
        btnPrint.setMaximumSize(new java.awt.Dimension(260, 35));
        btnPrint.setMinimumSize(new java.awt.Dimension(260, 35));
        btnPrint.setName("btnPrint"); // NOI18N
        btnPrint.setPreferredSize(new java.awt.Dimension(260, 35));
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });
        getContentPane().add(btnPrint);

        btnExportPDF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/wildlog/resources/icons/WildLog Icon.gif"))); // NOI18N
        btnExportPDF.setText("Export as PDF");
        btnExportPDF.setToolTipText("Create a new Workspace containing only relevant data and linked records.");
        btnExportPDF.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExportPDF.setFocusPainted(false);
        btnExportPDF.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnExportPDF.setIconTextGap(10);
        btnExportPDF.setMargin(new java.awt.Insets(2, 8, 2, 8));
        btnExportPDF.setMaximumSize(new java.awt.Dimension(260, 35));
        btnExportPDF.setMinimumSize(new java.awt.Dimension(260, 35));
        btnExportPDF.setName("btnExportPDF"); // NOI18N
        btnExportPDF.setPreferredSize(new java.awt.Dimension(260, 35));
        btnExportPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportPDFActionPerformed(evt);
            }
        });
        getContentPane().add(btnExportPDF);

        btnExportImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/wildlog/resources/icons/EXIF.png"))); // NOI18N
        btnExportImage.setText("Export as Image");
        btnExportImage.setToolTipText("Save copies of all relevant files in the Export folder.");
        btnExportImage.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExportImage.setFocusPainted(false);
        btnExportImage.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnExportImage.setIconTextGap(10);
        btnExportImage.setMargin(new java.awt.Insets(2, 8, 2, 8));
        btnExportImage.setMaximumSize(new java.awt.Dimension(260, 35));
        btnExportImage.setMinimumSize(new java.awt.Dimension(260, 35));
        btnExportImage.setName("btnExportImage"); // NOI18N
        btnExportImage.setPreferredSize(new java.awt.Dimension(260, 35));
        btnExportImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportImageActionPerformed(evt);
            }
        });
        getContentPane().add(btnExportImage);

        btnExportHTML.setIcon(new javax.swing.ImageIcon(getClass().getResource("/wildlog/resources/icons/HTML Icon.gif"))); // NOI18N
        btnExportHTML.setText("Export as Offline Webpage (Basic)");
        btnExportHTML.setToolTipText("Create a HTML web page for all relevant Observations and linked records. Can be viewed in a web browser.");
        btnExportHTML.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExportHTML.setFocusPainted(false);
        btnExportHTML.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnExportHTML.setIconTextGap(10);
        btnExportHTML.setMargin(new java.awt.Insets(2, 8, 2, 8));
        btnExportHTML.setMaximumSize(new java.awt.Dimension(260, 35));
        btnExportHTML.setMinimumSize(new java.awt.Dimension(260, 35));
        btnExportHTML.setName("btnExportHTML"); // NOI18N
        btnExportHTML.setPreferredSize(new java.awt.Dimension(260, 35));
        btnExportHTML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportHTMLActionPerformed(evt);
            }
        });
        getContentPane().add(btnExportHTML);

        btnExportHTMLAdvanced.setIcon(new javax.swing.ImageIcon(getClass().getResource("/wildlog/resources/icons/HTML Icon.gif"))); // NOI18N
        btnExportHTMLAdvanced.setText("Export as Offline Webpage (Advanced)");
        btnExportHTMLAdvanced.setToolTipText("Create a HTML web page for all relevant Observations and linked records. Can be viewed in a web browser.");
        btnExportHTMLAdvanced.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExportHTMLAdvanced.setEnabled(false);
        btnExportHTMLAdvanced.setFocusPainted(false);
        btnExportHTMLAdvanced.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnExportHTMLAdvanced.setIconTextGap(10);
        btnExportHTMLAdvanced.setMargin(new java.awt.Insets(2, 8, 2, 8));
        btnExportHTMLAdvanced.setMaximumSize(new java.awt.Dimension(260, 35));
        btnExportHTMLAdvanced.setMinimumSize(new java.awt.Dimension(260, 35));
        btnExportHTMLAdvanced.setName("btnExportHTMLAdvanced"); // NOI18N
        btnExportHTMLAdvanced.setPreferredSize(new java.awt.Dimension(260, 35));
        btnExportHTMLAdvanced.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportHTMLAdvancedActionPerformed(evt);
            }
        });
        getContentPane().add(btnExportHTMLAdvanced);

        btnExportCSV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/wildlog/resources/icons/CSV Icon.gif"))); // NOI18N
        btnExportCSV.setText("Export as Spreadsheet (Complete)");
        btnExportCSV.setToolTipText("Export a CSV file for all relevant Observations and linked records. Can be opened in Excel, etc.");
        btnExportCSV.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExportCSV.setFocusPainted(false);
        btnExportCSV.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnExportCSV.setIconTextGap(10);
        btnExportCSV.setMargin(new java.awt.Insets(2, 8, 2, 8));
        btnExportCSV.setMaximumSize(new java.awt.Dimension(260, 35));
        btnExportCSV.setMinimumSize(new java.awt.Dimension(260, 35));
        btnExportCSV.setName("btnExportCSV"); // NOI18N
        btnExportCSV.setPreferredSize(new java.awt.Dimension(260, 35));
        btnExportCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportCSVActionPerformed(evt);
            }
        });
        getContentPane().add(btnExportCSV);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExportHTMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportHTMLActionPerformed
        
        setVisible(false);
        dispose();
    }//GEN-LAST:event_btnExportHTMLActionPerformed

    private void btnExportHTMLAdvancedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportHTMLAdvancedActionPerformed
        
        setVisible(false);
        dispose();
    }//GEN-LAST:event_btnExportHTMLAdvancedActionPerformed

    private void btnExportCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportCSVActionPerformed
        
        setVisible(false);
        dispose();
    }//GEN-LAST:event_btnExportCSVActionPerformed

    private void btnExportImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportImageActionPerformed
        if (chartImage != null) {
            UtilsConcurency.kickoffProgressbarTask(WildLogApp.getApplication(), new ProgressbarTask(WildLogApp.getApplication()) {
                @Override
                protected Object doInBackground() throws Exception {
                    setProgress(0);
// TODO: gebruik die regte name vir al die exports
                    setMessage("Exporting Report Image for '" + "TODO" + "'");
                    Path filePath = WildLogPaths.WILDLOG_EXPORT_REPORTS_PNG.getAbsoluteFullPath().resolve("Report_" + System.currentTimeMillis() + ".png");
                    Files.createDirectories(filePath);
                    ImageIO.write(chartImage, "png", filePath.toFile());
                    UtilsFileProcessing.openFile(filePath);
                    setProgress(100);
                    setMessage("Done Exporting Report Image for '" + "TODO" + "'");
                    return null;
                }
            });
        }
        setVisible(false);
        dispose();
    }//GEN-LAST:event_btnExportImageActionPerformed

    private void btnExportPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportPDFActionPerformed
        if (chartImage != null) {
            UtilsConcurency.kickoffProgressbarTask(WildLogApp.getApplication(), new ProgressbarTask(WildLogApp.getApplication()) {
                @Override
                protected Object doInBackground() throws Exception {
                    setProgress(0);
                    setMessage("Exporting Report PDF for '" + "TODO" + "'");
                    PDDocument doc = null;
                    Path pdfPath = WildLogPaths.WILDLOG_EXPORT_REPORTS_PDF.getAbsoluteFullPath().resolve("test_" + System.currentTimeMillis() + ".pdf");
                    Files.createDirectories(pdfPath);
                    try {
                        doc = new PDDocument();
                        PDPage page = new PDPage(PDPage.PAGE_SIZE_A4);
                        doc.addPage(page);
                        PDPageContentStream content = new PDPageContentStream(doc, page);
                        PDXObjectImage ximage = new PDPixelMap(doc, chartImage);
                        Dimension scaledDim = getScaledDimension(new Dimension(ximage.getWidth(),  ximage.getHeight()), page.getMediaBox().createDimension());
                        content.drawXObject(ximage, 0, (page.getMediaBox().getHeight() - scaledDim.height), scaledDim.width, scaledDim.height);
                        content.close();
                    }
                    catch (IOException ex){
                        ex.printStackTrace();
                    }
                    finally {
                        try {
                            //save and close
                            if (doc != null) {
                                doc.save(pdfPath.toFile());
                                doc.close();
                            }
                        }
                        catch (Exception ex) {
                            ex.printStackTrace();
                        }
                    }
                    UtilsFileProcessing.openFile(pdfPath);
                    setProgress(100);
                    setMessage("Done Exporting Report PDF for '" + "TODO" + "'");
                    return null;
                }
            });
        }
        setVisible(false);
        dispose();
    }//GEN-LAST:event_btnExportPDFActionPerformed

    private Dimension getScaledDimension(Dimension imgSize, Dimension boundary) {
        int original_width = imgSize.width;
        int original_height = imgSize.height;
        int bound_width = boundary.width;
        int bound_height = boundary.height;
        int new_width = original_width;
        int new_height = original_height;

        // first check if we need to scale width
        if (original_width > bound_width) {
            //scale width to fit
            new_width = bound_width;
            //scale height to maintain aspect ratio
            new_height = (new_width * original_height) / original_width;
        }

        // then check if we need to scale even with the new height
        if (new_height > bound_height) {
            //scale height to fit instead
            new_height = bound_height;
            //scale width to maintain aspect ratio
            new_width = (new_height * original_width) / original_height;
        }

        return new Dimension(new_width, new_height);
    }
    
    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        
        setVisible(false);
        dispose();
    }//GEN-LAST:event_btnPrintActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExportCSV;
    private javax.swing.JButton btnExportHTML;
    private javax.swing.JButton btnExportHTMLAdvanced;
    private javax.swing.JButton btnExportImage;
    private javax.swing.JButton btnExportPDF;
    private javax.swing.JButton btnPrint;
    // End of variables declaration//GEN-END:variables
}
